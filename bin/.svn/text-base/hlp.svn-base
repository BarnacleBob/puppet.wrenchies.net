#!/bin/bash

[ -e "$(dirname $0)/functions.sh" ] && source $(dirname $0)/functions.sh || { echo "could not find functions.sh to source"; exit 5; }

function usage {
	echo "$0 [<env>] <command> <args>"
	echo ""
	echo "hlp is designed to help you find things or learn about things"
	echo "note all puppet dev commands obey the default env or use the passed"
	echo "env on the command line"
	echo ""
	echo "name arguments can be posix regexp"
	echo ""
	echo "Commands"
	echo "-------------------------------------------------------------"
	echo "classes					lists all the classes in <env>"
	echo "class <name>				lists the class <named> in <env>"
	echo "roles						lists all the roles in <env>"
	echo "role <name>				lists the role <named> in <env>"
	echo "defines					"
	echo "define <name>				"
	echo "defaults					where type defaults and variables are set"
	echo "file						find a file named this shell glob"
	echo "grep						egrep for a patter but filter out the svn results and other annoying things"
	echo "							this ignores environments"
	echo "nodes						*this does not work for shared environment"
	echo ""
	usageEnvironments
	exit 2
}

function intgrep {
	egrep -irl "$1" $__BASE__ | grep -v .svn || { echo "none found"; exit 1; }
}

function nodes {
	env=$(getEnv) || usage
	isShared $env && usage
	
	echo "$__BASE__/environments/$env/nodes.pp"
}

function file {
	env=$(getEnv) || usage
	
	find $(getEnvPath)/files -name "$1" || { echo "none found"; exit 1; }
}

function defines {
	env=$(getEnv) || usage
	
	if [ "$env" != "shared" ]; then
		prefix="$env::"
	fi
	
	echo "defines available in $env"
	echo "-------------------------"
	egrep -irho --exclude="*.svn*" "define[[:space:]]+$prefix[^[:space:]]+[[:space:]]*\(" $(getEnvManifestPath)/defines | perl -ple "s#define\s*$prefix(\S*)\s*\(#\1#ig"
}

function define {
	env=$(getEnv) || usage
	
	[ -z "$1" ] && usage

	if [ "$env" != "shared" ]; then
		prefix="$env::"
	fi
		
	egrep -irl --exclude="*.svn*" "define[[:space:]]+$prefix$1[[:space:]]*\(" $(getEnvManifestPath)/defines || { echo "none found"; exit 1; }
}

function classes {
	env=$(getEnv) || usage
	echo "classes available in $env"
	echo "-------------------------"
	egrep -irho --exclude="*.svn*" "class[[:space:]]+$env::[^[:space:]]+[[:space:]]*(\{|inherits)" $(getEnvManifestPath)/classes | perl -ple "s#class\s*$env::(\S*)\s*(\{|inherits)#\1#ig"
}

function class {
	env=$(getEnv) || usage
	
	[ -z "$1" ] && usage
	
	egrep -irl --exclude="*.svn*" "class[[:space:]]+$env::$1[[:space:]]*(\{|inherits)" $(getEnvManifestPath)/classes || { echo "none found"; exit 1; }
}

function roles {
	env=$(getEnv) || usage
	echo "roles available in $env"
	echo "-------------------------"
	egrep -irho --exclude="*.svn*" "class[[:space:]]+$env::role::[^[:space:]]+[[:space:]]*(\{|inherits)" $(getEnvManifestPath)/roles | perl -ple "s#class\s*$env::role::(\S*)\s*(\{|inherits)#\1#ig"
}

function role {
	env=$(getEnv) || usage
	
	[ -z "$1" ] && usage
	
	egrep -irl --exclude="*.svn*" "class[[:space:]]+$env::role::$1[[:space:]]*(\{|inherits)" $(getEnvManifestPath)/roles || { echo "none found"; exit 1; }
}

function defaults {
	env=$(getEnv) || usage
	
	echo $(getEnvManifestPath)/defaults.pp || { exit 1; }
}

case $1 in
	classes|class|defines|define|defaults|file|grep|nodes|roles|role) 
		command=$1
		[ "$command" == "grep" ] && command="intgrep"
		shift
		
		$command $@
		;;
	*) usage ;;
esac
